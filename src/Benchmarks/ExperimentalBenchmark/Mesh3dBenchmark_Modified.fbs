
namespace BenchmarkCore.Modified;

struct Vector4 (fs_writeThrough, fs_pool)
{
    x:float;
    y:float;
    z:float;
    w:float;
}

struct Vector3Int (fs_writeThrough, fs_pool)
{
    x:int32;
    y:int32;
    z:int32;
}

struct Vector3  (fs_writeThrough, fs_pool)
{
    x:float;
    y:float;
    z:float;
}

struct Vector2Int (fs_writeThrough, fs_pool)
{
    x:int32;
    y:int32;
}

struct Vector2 (fs_writeThrough, fs_pool)
{
    x:float;
    y:float;
}

struct Color (fs_writeThrough, fs_pool)
{
    r: ubyte;
    g: ubyte;
    b: ubyte;
    a: ubyte;
}

struct Voxel (fs_writeThrough, fs_pool)
{
    VoxelType: ubyte;
    SubType : ubyte;
    Hp:ubyte;
    Unused:ubyte;
}

struct MutableUInt32 (fs_writeThrough, fs_pool)
{
    Value : uint32;
}

struct MutableUShort (fs_writeThrough, fs_pool)
{
    Value : ushort;
}

table Mesh (fs_serializer:VectorCacheMutable)
{
    vertices:   [Vector3] (fs_vector:Array);
    normals:    [Vector3] (fs_vector:Array);
    uv:         [Vector2] (fs_vector:Array);
    color:      [Color] (fs_vector:Array);
    triangles:  [MutableUShort] (fs_vector:Array);
    filledLength: MutableUInt32;
}

table VoxelRegion3D (fs_serializer:VectorCacheMutable)
{
    location: Vector3Int;
    iteration: MutableUInt32;
    size: ushort;
    voxels: [Voxel];
} 